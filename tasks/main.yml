---
# tasks file for cntlm
- name: install requirements
  package:
    name: "{{ cntlm_requirements }}"
    state: present
  register: cntlm_install_requirements
  until: cntlm_install_requirements is succeeded
  retries: 3

- name: unpack cntlm software
  unarchive:
    src: "{{ cntlm_sourceforge_mirror }}/{{ cntlm_archive }}"
    dest: /tmp
    remote_src: yes
  register: cntlm_unpack_cntlm_software
  until: cntlm_unpack_cntlm_software is succeeded
  retries: 3
  when:
    - ansible_pkg_mgr != "apt"
    - ansible_pkg_mgr != "yum"
    - ansible_pkg_mgr != "dnf"
  notify:
    - configure cntlm
    - make cntlm
    - install cntlm

- name: install cntlm software (dnf)
  dnf:
    name: "{{ cntlm_rpm_repository }}"
    state: present
  when:
    - ansible_pkg_mgr == "dnf"
  register: cntlm_install_cntlm_software_dnf
  until: cntlm_install_cntlm_software_dnf is succeeded
  retries: 3

- name: install cntlm software (yum)
  yum:
    name: "{{ cntlm_rpm_repository }}"
    state: present
    validate_certs: no
  when:
    - ansible_pkg_mgr == "yum"
  register: cntlm_install_cntlm_software_yum
  until: cntlm_install_cntlm_software_yum is succeeded
  retries: 3

- name: download cntlm software (deb)
  get_url:
    url: "{{ cntlm_dpkg_repository }}"
    dest: "/tmp/cntlm_{{ cntlm_version }}_amd64.deb"
    validate_certs: no
  when:
    - ansible_pkg_mgr == "apt"
  register: cntlm_download_cntlm_software_deb
  until: cntlm_download_cntlm_software_deb is succeeded
  retries: 3

- name: install cntlm software (apt)
  apt:
    deb: "/tmp/cntlm_{{ cntlm_version }}_amd64.deb"
    state: present
  when:
    - ansible_pkg_mgr == "apt"
  register: cntlm_install_cntlm_software
  until: cntlm_install_cntlm_software is succeeded
  retries: 3

- name: create cntlm service
  import_role:
    name: robertdebock.service

- name: generate hash
  shell: "set -o pipefail ; {{ cntlm_hash_command }} | tee /etc/cntlm.hash"
  args:
    creates: /etc/cntlm.hash
    executable: /bin/bash
  register: generate_hash
  check_mode: no
  notify:
    - configure cntlm.conf

- name: start and enable cntlm
  service:
    name: cntlm
    state: started
    enabled: yes
  when:
    - ansible_virtualization_type != "docker"
